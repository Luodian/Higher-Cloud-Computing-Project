<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apache.Ignite.Linq</name>
    </assembly>
    <members>
        <member name="T:Apache.Ignite.Linq.CacheLinqExtensions">
            <summary>
            Extensions methods for <see cref="T:Apache.Ignite.Core.Cache.ICache`2"/>.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.AsCacheQueryable``2(Apache.Ignite.Core.Cache.ICache{``0,``1})">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> instance over this cache.
            <para/>
            Resulting query will be translated to cache SQL query and executed over the cache instance 
            via either <see cref="M:Apache.Ignite.Core.Cache.ICache`2.Query(Apache.Ignite.Core.Cache.Query.QueryBase)"/> or <see cref="M:Apache.Ignite.Core.Cache.ICache`2.QueryFields(Apache.Ignite.Core.Cache.Query.SqlFieldsQuery)"/>,
            depending on requested result. 
            <para/>
            Result of this method (and subsequent query) can be cast to <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/> for introspection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="cache">The cache.</param>
            <returns><see cref="T:System.Linq.IQueryable`1"/> instance over this cache.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.AsCacheQueryable``2(Apache.Ignite.Core.Cache.ICache{``0,``1},System.Boolean)">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> instance over this cache.
            <para/>
            Resulting query will be translated to cache SQL query and executed over the cache instance 
            via either <see cref="M:Apache.Ignite.Core.Cache.ICache`2.Query(Apache.Ignite.Core.Cache.Query.QueryBase)"/> or <see cref="M:Apache.Ignite.Core.Cache.ICache`2.QueryFields(Apache.Ignite.Core.Cache.Query.SqlFieldsQuery)"/>,
            depending on requested result. 
            <para/>
            Result of this method (and subsequent query) can be cast to <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/> for introspection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="cache">The cache.</param>
            <param name="local">Local flag. When set query will be executed only on local node, so only local 
            entries will be returned as query result.</param>
            <returns><see cref="T:System.Linq.IQueryable`1"/> instance over this cache.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.AsCacheQueryable``2(Apache.Ignite.Core.Cache.ICache{``0,``1},System.Boolean,System.String)">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> instance over this cache.
            <para/>
            Resulting query will be translated to cache SQL query and executed over the cache instance
            via either <see cref="M:Apache.Ignite.Core.Cache.ICache`2.Query(Apache.Ignite.Core.Cache.Query.QueryBase)"/> or <see cref="M:Apache.Ignite.Core.Cache.ICache`2.QueryFields(Apache.Ignite.Core.Cache.Query.SqlFieldsQuery)"/>,
            depending on requested result.
            <para/>
            Result of this method (and subsequent query) can be cast to <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/> for introspection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="cache">The cache.</param>
            <param name="local">Local flag. When set query will be executed only on local node, so only local 
            entries will be returned as query result.</param>
            <param name="tableName">
            Name of the table.
            <para/>
            Table name is equal to short class name of a cache value.
            When a cache has only one type of values, or only one <see cref="T:Apache.Ignite.Core.Cache.Configuration.QueryEntity"/> defined, 
            table name will be inferred and can be omitted.
            </param>
            <returns><see cref="T:System.Linq.IQueryable`1"/> instance over this cache.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.AsCacheQueryable``2(Apache.Ignite.Core.Cache.ICache{``0,``1},Apache.Ignite.Linq.QueryOptions)">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> instance over this cache.
            <para/>
            Resulting query will be translated to cache SQL query and executed over the cache instance
            via either <see cref="M:Apache.Ignite.Core.Cache.ICache`2.Query(Apache.Ignite.Core.Cache.Query.QueryBase)"/> or <see cref="M:Apache.Ignite.Core.Cache.ICache`2.QueryFields(Apache.Ignite.Core.Cache.Query.SqlFieldsQuery)"/>,
            depending on requested result.
            <para/>
            Result of this method (and subsequent query) can be cast to <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/> for introspection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="cache">The cache.</param>
            <param name="queryOptions">The query options.</param>
            <returns>
              <see cref="T:System.Linq.IQueryable`1"/> instance over this cache.
            </returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.ToCacheQueryable``1(System.Linq.IQueryable{``0})">
            <summary>
            Casts this query to <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/>.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.RemoveAll``2(System.Linq.IQueryable{Apache.Ignite.Core.Cache.ICacheEntry{``0,``1}})">
            <summary>
            Removes all rows that are matched by the specified query.
            <para />
            This method results in "DELETE FROM" distributed SQL query, performing bulk delete 
            (as opposed to fetching all rows locally).
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
            <param name="query">The query.</param>
            <returns>Affected row count.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CacheLinqExtensions.RemoveAll``2(System.Linq.IQueryable{Apache.Ignite.Core.Cache.ICacheEntry{``0,``1}},System.Linq.Expressions.Expression{System.Func{Apache.Ignite.Core.Cache.ICacheEntry{``0,``1},System.Boolean}})">
            <summary>
            Deletes all rows that are matched by the specified query.
            <para />
            This method results in "DELETE FROM" distributed SQL query, performing bulk delete
            (as opposed to fetching all rows locally).
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
            <param name="query">The query.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            Affected row count.
            </returns>
        </member>
        <member name="T:Apache.Ignite.Linq.CompiledQueryFunc`1">
            <summary>
            Delegate for compiled query with arbitrary number of arguments.
            </summary>
            <typeparam name="T">Result type.</typeparam>
            <param name="args">The arguments.</param>
            <returns>Query cursor.</returns>
        </member>
        <member name="T:Apache.Ignite.Linq.CompiledQuery">
            <summary>
            Represents a compiled cache query.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``1(System.Linq.IQueryable{``0})">
            <summary>
            Creates a new delegate that represents the compiled cache query with any number of arguments.
            <para/>
            This method differs from other Compile methods in that it takes in <see cref="T:Apache.Ignite.Linq.ICacheQueryable"/> directly,
            and returns a delegate that takes an array of parameters.
            It is up to the user to provide query arguments in correct order.
            <para/>
            This method also imposes no restrictions on where the query comes from (in contrary to other methods).
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``1,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``1,``2,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,``4,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,``4,``5,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,``4,``5,``6,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,``4,``5,``6,``7,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``1,``2,``3,``4,``5,``6,``7,``8,System.Linq.IQueryable{``0}}})">
            <summary>
            Creates a new delegate that represents the compiled cache query.
            </summary>
            <param name="query">The query to compile.</param>
            <returns>Delegate that represents the compiled cache query.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.GetCompiledQuery``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the compiled query.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.CompiledQuery.GetInvalidQueryException(System.Object)">
            <summary>
            Gets the invalid query exception.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.ICacheQueryable">
            <summary>
            Common interface for cache queryables.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.ICacheQueryable.GetFieldsQuery">
            <summary>
            Returns fields query that represents current queryable.
            </summary>
            <returns>Fields query that represents current queryable.</returns>
        </member>
        <member name="P:Apache.Ignite.Linq.ICacheQueryable.CacheName">
            <summary>
            Gets the name of the cache that is associated with this query.
            </summary>
            <value>
            The name of the cache.
            </value>
        </member>
        <member name="P:Apache.Ignite.Linq.ICacheQueryable.Ignite">
            <summary>
            Gets the Ignite instance associated with this query.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.ICacheQueryable.ElementType">
            <summary>
            Gets the type of the element.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.AliasDictionary">
            <summary>
            Alias dictionary.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.AliasDictionary._tableAliasIndex">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.AliasDictionary._tableAliases">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.AliasDictionary._fieldAliasIndex">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.AliasDictionary._fieldAliases">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.AliasDictionary._stack">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.Push">
            <summary>
            Pushes current aliases to stack.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.Pop">
            <summary>
            Pops current aliases from stack.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetTableAlias(System.Linq.Expressions.Expression)">
            <summary>
            Gets the table alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetTableAlias(Remotion.Linq.Clauses.IFromClause)">
            <summary>
            Gets the table alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetTableAlias(Remotion.Linq.Clauses.JoinClause)">
            <summary>
            Gets the table alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetTableAlias(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
            Gets the table alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetFieldAlias(System.Linq.Expressions.Expression)">
            <summary>
            Gets the fields alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetFieldAlias(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
            Gets the fields alias.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.AppendAsClause(System.Text.StringBuilder,Remotion.Linq.Clauses.IFromClause)">
            <summary>
            Appends as clause.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.AliasDictionary.GetQuerySource(System.Linq.Expressions.Expression)">
            <summary>
            Gets the query source.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheFieldsQueryable`1">
            <summary>
            Fields <see cref="T:System.Linq.IQueryable`1"/> implementation for <see cref="T:Apache.Ignite.Core.Cache.ICache`2"/>.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryableBase`1">
            <summary>
            Base class for cache queryables.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.ICacheQueryableInternal">
            <summary>
            Internal queryable interface.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ICacheQueryableInternal.GetQueryModel">
            <summary>
            Gets the query model.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ICacheQueryableInternal.CompileQuery``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Compiles the query.
            </summary>
            <param name="queryExpression">The query expression.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ICacheQueryableInternal.CompileQuery``1">
            <summary>
            Compiles the query without regard to the order and number of arguments.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.ICacheQueryableInternal.CacheConfiguration">
            <summary>
            Gets the configuration of the cache that is associated with this query.
            </summary>
            <value>
            The configuration of the cache.
            </value>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.ICacheQueryableInternal.TableName">
            <summary>
            Gets the name of the table.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.#ctor(System.Linq.IQueryProvider)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.#ctor(System.Linq.IQueryProvider,System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.GetFieldsQuery">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.GetQueryModel">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.CompileQuery``1(System.Linq.Expressions.LambdaExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.CompileQuery``1">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.GetQueryData">
            <summary>
            Gets the query data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.CacheConfiguration">
            <inheritdoc /> 
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.CacheName">
            <inheritdoc /> 
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.Ignite">
            <inheritdoc /> 
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.TableName">
            <inheritdoc /> 
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryableBase`1.CacheQueryProvider">
            <summary>
            Gets the cache query provider.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryable`1.#ctor(System.Linq.IQueryProvider,System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.CacheQueryable`2"/> class.
            </summary>
            <param name="provider">The provider used to execute the query represented by this queryable 
            and to construct new queries.</param>
            <param name="expression">The expression representing the query.</param>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor">
            <summary>
            Fields query executor.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor._cache">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor._options">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.CtorCache">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.#ctor(Apache.Ignite.Core.Impl.Cache.ICacheInternal,Apache.Ignite.Linq.QueryOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor"/> class.
            </summary>
            <param name="cache">The executor function.</param>
            <param name="options">Query options.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.ExecuteScalar``1(Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.ExecuteSingle``1(Remotion.Linq.QueryModel,System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.ExecuteCollection``1(Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.CompileQuery``1(Remotion.Linq.QueryModel)">
            <summary>
            Compiles the query without regard to number or order of arguments.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.CompileQuery``1(Remotion.Linq.QueryModel,Remotion.Linq.QueryModel,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Compiles the query.
            </summary>
            <typeparam name="T">Result type.</typeparam>
            <param name="queryModel">The query model.</param>
            <param name="queryLambdaModel">The query model generated from lambda body.</param>
            <param name="queryLambda">The query lambda.</param>
            <returns>Compiled query func.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.MapQueryArgs(System.Object[],System.Object[],System.Int32[])">
            <summary>
            Maps the query arguments.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.GetFieldsQuery(System.String,System.Object[])">
            <summary>
            Gets the fields query.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.GetQueryData(Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.GetResultSelector``1(System.Linq.Expressions.Expression)">
            <summary>
            Gets the result selector.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.ReadBool``1(Apache.Ignite.Core.Binary.IBinaryRawReader,System.Int32)">
            <summary>
            Reads the bool. Actual data may be bool or int/long.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.GetCacheEntryCtorInfo(System.Type)">
            <summary>
            Gets the cache entry constructor.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor.GetCompiledCtor``1(System.Reflection.ConstructorInfo)">
            <summary>
            Gets the compiled constructor.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider">
            <summary>
            Query provider for fields queries (projections).
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.GenericCreateQueryMethod">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider._parser">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider._executor">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider._ignite">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider._cacheConfiguration">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider._tableName">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.#ctor(Remotion.Linq.Parsing.Structure.IQueryParser,Apache.Ignite.Linq.Impl.CacheFieldsQueryExecutor,Apache.Ignite.Core.IIgnite,Apache.Ignite.Core.Cache.Configuration.CacheConfiguration,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider"/> class.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.GenerateQueryModel(System.Linq.Expressions.Expression)">
            <summary>
            Generates the query model.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the specified expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.ValidateTableName">
            <summary>
            Validates the name of the table.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.GetValidTableNames">
            <summary>
            Gets the valid table names for current cache.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.GetTableName(Apache.Ignite.Core.Cache.Configuration.QueryEntity)">
            <summary>
            Gets the name of the SQL table.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.InferTableName(System.Type)">
            <summary>
            Infers the name of the table from cache configuration.
            </summary>
            <param name="cacheValueType"></param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.EscapeTableName(System.String)">
            <summary>
            Escapes the name of the table: strips namespace and nested class qualifiers.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.GetItemTypeOfClosedGenericIEnumerable(System.Type,System.String)">
            <summary>
            Gets the item type of closed generic i enumerable.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.Ignite">
            <summary>
            Gets the ignite.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.CacheConfiguration">
            <summary>
            Gets the name of the cache.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.TableName">
            <summary>
            Gets the name of the table.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheFieldsQueryProvider.Executor">
            <summary>
            Gets the executor.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryable`2">
            <summary>
            <see cref="T:System.Linq.IQueryable`1"/> implementation for <see cref="T:Apache.Ignite.Core.Cache.ICache`2"/>.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryable`2.#ctor(Apache.Ignite.Core.Cache.ICache{`0,`1},Apache.Ignite.Linq.QueryOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.CacheQueryable`2"/> class.
            </summary>
            <param name="cache">The cache.</param>
            <param name="queryOptions">The query options.</param>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor">
            <summary>
            Expression visitor, transforms query subexpressions (such as Where clauses) to SQL.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor._useStar">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor._modelVisitor">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.FieldNameMap">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor._includeAllFields">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.#ctor(Apache.Ignite.Linq.Impl.CacheQueryModelVisitor,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor"/> class.
            </summary>
            <param name="modelVisitor">The _model visitor.</param>
            <param name="useStar">Flag indicating that star '*' qualifier should be used
            for the whole-table select instead of _key, _val.</param>
            <param name="includeAllFields">Flag indicating that star '*' qualifier should be used
            for the whole-table select as well as _key, _val.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitBinaryFunc(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits the binary function.
            </summary>
            <param name="expression">The expression.</param>
            <returns>True if function detected, otherwise false.</returns>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.GetEscapedFieldName(System.Linq.Expressions.MemberExpression,Apache.Ignite.Linq.Impl.ICacheQueryableInternal)">
            <summary>
            Gets the name of the field from a member expression, with quotes when necessary.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.GetFieldName(System.Linq.Expressions.MemberExpression,Apache.Ignite.Linq.Impl.ICacheQueryableInternal,System.Boolean)">
            <summary>
            Gets the name of the field from a member expression, with quotes when necessary.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.GetQueryEntity(Apache.Ignite.Linq.Impl.ICacheQueryableInternal,Apache.Ignite.Core.Cache.Configuration.CacheConfiguration)">
            <summary>
            Finds matching query entity in the cache configuration.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.GetMemberFieldName(System.Reflection.MemberInfo)">
            <summary>
            Gets the name of the member field.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitGroupByMember(System.Linq.Expressions.Expression)">
            <summary>
            Visits the group by member.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.AppendParameter(System.Object)">
            <summary>
            Appends the parameter.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitContains(Remotion.Linq.QueryModel,Remotion.Linq.Clauses.ResultOperators.ContainsResultOperator)">
            <summary>
            Visits IEnumerable.Contains
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.AppendInParameters(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Appends not null parameters using ", " as delimeter.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.VisitArguments(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
            Visits multiple arguments.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.ResultBuilder">
            <summary>
            Gets the result builder.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.Parameters">
            <summary>
            Gets the parameters.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor.Aliases">
            <summary>
            Gets the aliases.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor">
            <summary>
            Query visitor, transforms LINQ expression to SQL.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor._builder">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor._parameters">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor._aliases">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.DefaultIfEmptyEnumeratorType">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.GenerateQuery(Remotion.Linq.QueryModel)">
            <summary>
            Generates the query.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitQueryModel(Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitQueryModel(Remotion.Linq.QueryModel,System.Boolean)">
            <summary>
            Visits the query model.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitRemoveOperator(Remotion.Linq.QueryModel)">
            <summary>
            Visits the remove operator. Returns true if it is present.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitSelectors(Remotion.Linq.QueryModel,System.Boolean)">
            <summary>
            Visits the selectors.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.ProcessResultOperatorsBegin(Remotion.Linq.QueryModel)">
            <summary>
            Processes the result operators that come right after SELECT: min/max/count/sum/distinct
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.ProcessResultOperatorsEnd(Remotion.Linq.QueryModel)">
            <summary>
            Processes the result operators that go in the end of the query: limit/offset/union/intersect/except
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.ProcessSkipTake(Remotion.Linq.QueryModel)">
            <summary>
            Processes the pagination (skip/take).
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitBodyClauses(System.Collections.ObjectModel.ObservableCollection{Remotion.Linq.Clauses.IBodyClause},Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.ProcessGroupings(Remotion.Linq.QueryModel)">
            <summary>
            Processes the groupings.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.ValidateFromClause(Remotion.Linq.Clauses.IFromClause)">
            <summary>
            Validates from clause.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,System.Int32,System.Boolean)">
            <summary>
            Visits the where clause.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.VisitJoinWithLocalCollectionClause(Remotion.Linq.Clauses.JoinClause)">
            <summary>
            Visists Join clause in case of join with local collection
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.BuildJoinCondition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Builds the join condition ('x=y AND foo=bar').
            </summary>
            <param name="innerKey">The inner key selector.</param>
            <param name="outerKey">The outer key selector.</param>
            <exception cref="T:System.NotSupportedException">
            </exception>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.BuildJoinSubCondition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Builds the join sub condition.
            </summary>
            <param name="innerKey">The inner key.</param>
            <param name="outerKey">The outer key.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.BuildSqlExpression(System.Linq.Expressions.Expression,System.Boolean,System.Boolean)">
            <summary>
            Builds the SQL expression.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.Builder">
            <summary>
            Gets the builder.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.Parameters">
            <summary>
            Gets the parameters.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryModelVisitor.Aliases">
            <summary>
            Gets the aliases.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryParser">
            <summary>
            Cache query parser.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.CacheQueryParser.ThreadLocalInstance">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryParser.CreateParser">
            <summary>
            Creates the parser.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryParser.CreateNodeTypeProvider">
            <summary>
            Creates the node type provider.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.CacheQueryParser.CreateCompoundProcessor(Remotion.Linq.Parsing.ExpressionVisitors.Transformation.IExpressionTranformationProvider)">
            <summary>
            Creates CompoundExpressionTreeProcessor.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.CacheQueryParser.Instance">
            <summary>
            Gets the default instance for current thread.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.CacheQueryParser.NullEvaluatableExpressionFilter">
            <summary>
            Empty implementation of IEvaluatableExpressionFilter.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode">
            <summary>
            Represents a <see cref="T:System.Linq.Expressions.MethodCallExpression"/> for 
            <see cref="M:Apache.Ignite.Linq.CacheLinqExtensions.RemoveAll``2(System.Linq.IQueryable{Apache.Ignite.Core.Cache.ICacheEntry{``0,``1}})"/>.
            When user calls RemoveAll, this node is generated.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.RemoveAllMethodInfos">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.RemoveAllMethodInfo">
            <summary>
            The RemoveAll() method.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.RemoveAllPredicateMethodInfo">
            <summary>
            The RemoveAll(pred) method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode"/> class.
            </summary>
            <param name="parseInfo">The parse information.</param>
            <param name="optionalPredicate">The optional predicate.</param>
            <param name="optionalSelector">The optional selector.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllExpressionNode.GetSupportedMethods">
            <summary>
            Gets the supported methods.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.Dml.RemoveAllResultOperator">
            <summary>
            Represents an operator for <see cref="M:Apache.Ignite.Linq.CacheLinqExtensions.RemoveAll``2(System.Linq.IQueryable{Apache.Ignite.Core.Cache.ICacheEntry{``0,``1}})"/>.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllResultOperator.GetOutputDataInfo(Remotion.Linq.Clauses.StreamedData.IStreamedDataInfo)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.Dml.RemoveAllResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)">
            <inheritdoc /> 
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.EnumerableHelper">
            <summary>
            Contains static methods to work with IEnumerable
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.EnumerableHelper.GetIEnumerableItemType(System.Type)">
            <summary>
            Gets item type of enumerable
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.MethodVisitor">
            <summary>
            MethodCall expression visitor.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.MethodVisitor.Properties">
            <summary> Property visitors. </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.MethodVisitor.Delegates">
            <summary>
            Delegates dictionary.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.MethodVisitor.RegexOptionFlags">
            <summary> RegexOptions transformations. </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitPropertyCall(System.Linq.Expressions.MemberExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor)">
            <summary>
            Visits the property call expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor)">
            <summary>
            Visits the method call expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitConstantCall(System.Linq.Expressions.ConstantExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor)">
            <summary>
            Visits the constant call expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetFunc(System.String,System.Int32[])">
            <summary>
            Gets the function.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitFunc(System.Linq.Expressions.MethodCallExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor,System.String,System.String,System.Int32[])">
            <summary>
            Visits the instance function.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitParameterizedTrimFunc(System.Linq.Expressions.MethodCallExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor,System.String)">
            <summary>
            Visits the instance function for Trim specific handling.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.AppendAdjustment(Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor,System.Int32[],System.Int32)">
            <summary>
            Appends the adjustment.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.VisitSqlLike(System.Linq.Expressions.MethodCallExpression,Apache.Ignite.Linq.Impl.CacheQueryExpressionVisitor,System.String)">
            <summary>
            Visits the SQL like expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetMethod(System.Type,System.String,System.Type[],Apache.Ignite.Linq.Impl.MethodVisitor.VisitMethodDelegate)">
            <summary>
            Gets the method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetStringMethod(System.String,System.Type[],Apache.Ignite.Linq.Impl.MethodVisitor.VisitMethodDelegate)">
            <summary>
            Gets the string method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetStringMethod(System.String,System.String,System.Type[])">
            <summary>
            Gets the string method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetRegexMethod(System.String,System.String,System.Type[])">
            <summary>
            Gets the Regex method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetParameterizedTrimMethod(System.String,System.String)">
            <summary>
            Gets string parameterized Trim(TrimStart, TrimEnd) method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetMathMethod(System.String,System.String,System.Type[])">
            <summary>
            Gets the math method.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.MethodVisitor.GetMathMethod(System.String,System.Type[])">
            <summary>
            Gets the math method.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.MethodVisitor.VisitMethodDelegate">
            <summary> Method visit delegate. </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.QueryData">
            <summary>
            Query data holder.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.QueryData._parameters">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.QueryData._queryText">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.QueryData.#ctor(System.String,System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.Impl.QueryData"/> class.
            </summary>
            <param name="queryText">The query text.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.QueryData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.QueryData.Parameters">
            <summary>
            Gets the parameters.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.Impl.QueryData.QueryText">
            <summary>
            Gets the query text.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.SqlTypes">
            <summary>
            SQL type mapping.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.SqlTypes.NetToSql">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.SqlTypes.NotSupportedTypes">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.SqlTypes.GetSqlTypeName(System.Type)">
            <summary>
            Gets the corresponding Java type name.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.ExpressionWalker">
            <summary>
            Walks expression trees to extract query and table name info.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.ExpressionWalker.MemberReaders">
            Compiled member readers. 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.GetCacheQueryable(Remotion.Linq.Clauses.IFromClause,System.Boolean)">
            <summary>
            Gets the cache queryable.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.GetCacheQueryable(Remotion.Linq.Clauses.JoinClause,System.Boolean)">
            <summary>
            Gets the cache queryable.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.GetCacheQueryable(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Gets the cache queryable.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.GetQuerySourceReference(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Tries to find QuerySourceReferenceExpression
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.EvaluateExpression``1(System.Linq.Expressions.Expression)">
            <summary>
            Evaluates the expression.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.EvaluateEnumerableValues(System.Linq.Expressions.Expression)">
            <summary>
            Gets the values from IEnumerable expression
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.CompileMemberReader(System.Linq.Expressions.MemberExpression)">
            <summary>
            Compiles the member reader.
            </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.ExpressionWalker.GetTableNameWithSchema(Apache.Ignite.Linq.Impl.ICacheQueryableInternal)">
            <summary>
            Gets the table name with schema.
            </summary>
        </member>
        <member name="T:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor">
            <summary>
            Transforms JoinClause with parameterised inner sequence to .Join(innerSequence ?? new T[0] ...
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor.JoinMethods">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor.EnumerableType">
            
        </member>
        <member name="F:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor._inJoin">
            
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <inheritdoc /> 
        </member>
        <member name="M:Apache.Ignite.Linq.Impl.JoinInnerSequenceParameterNotNullExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <inheritdoc /> 
        </member>
        <member name="T:Apache.Ignite.Linq.QueryOptions">
            <summary>
            Cache query options.
            </summary>
        </member>
        <member name="F:Apache.Ignite.Linq.QueryOptions.DefaultPageSize">
            <summary> Default page size. </summary>
        </member>
        <member name="M:Apache.Ignite.Linq.QueryOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Apache.Ignite.Linq.QueryOptions"/> class.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.Local">
            <summary>
            Local flag. When set query will be executed only on local node, so only local 
            entries will be returned as query result.
            <para />
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.PageSize">
            <summary>
            Page size, defaults to <see cref="F:Apache.Ignite.Linq.QueryOptions.DefaultPageSize"/>.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.TableName">
            <summary>
            Gets or sets the name of the table. 
            <para/>
            Table name is equal to short class name of a cache value.
            When a cache has only one type of values, or only one <see cref="T:Apache.Ignite.Core.Cache.Configuration.QueryEntity"/> defined,
            table name will be inferred and can be omitted (null).
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.EnableDistributedJoins">
            <summary>
            Gets or sets a value indicating whether distributed joins should be enabled for this query.
            <para />
            When disabled, join results will only contain colocated data (joins work locally).
            When enabled, joins work as expected, no matter how the data is distributed.
            </summary>
            <value>
            <c>true</c> if enable distributed joins should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.EnforceJoinOrder">
            <summary>
            Gets or sets a value indicating whether join order of tables should be enforced.
            <para />
            When true, query optimizer will not reorder tables in join.
            <para />
            It is not recommended to enable this property until you are sure that your indexes
            and the query itself are correct and tuned as much as possible but
            query optimizer still produces wrong join order.
            </summary>
            <value>
              <c>true</c> if join order should be enforced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.Timeout">
            <summary>
            Gets or sets the query timeout. Query will be automatically cancelled if the execution timeout is exceeded.
            Default is <see cref="F:System.TimeSpan.Zero"/>, which means no timeout.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.ReplicatedOnly">
            <summary>
            Gets or sets a value indicating whether this query contains only replicated tables.
            This is a hint for potentially more effective execution.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.Colocated">
            <summary>
            Gets or sets a value indicating whether this query operates on colocated data.
            <para />
            Whenever Ignite executes a distributed query, it sends sub-queries to individual cluster members.
            If you know in advance that the elements of your query selection are colocated together on the same
            node and you group by colocated key (primary or affinity key), then Ignite can make significant
            performance and network optimizations by grouping data on remote nodes.
            </summary>
        </member>
        <member name="P:Apache.Ignite.Linq.QueryOptions.Lazy">
            <summary>
            Gets or sets a value indicating whether this query is lazy.
            <para />
            By default Ignite attempts to fetch the whole query result set to memory and send it to the client.
            For small and medium result sets this provides optimal performance and minimize duration of internal
            database locks, thus increasing concurrency.
            <para />
            If result set is too big to fit in available memory this could lead to excessive GC pauses and even
            OutOfMemoryError. Use this flag as a hint for Ignite to fetch result set lazily, thus minimizing memory
            consumption at the cost of moderate performance hit.
            </summary>
        </member>
    </members>
</doc>
